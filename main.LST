C51 COMPILER V9.54   MAIN                                                                  06/11/2017 07:58:41 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\c51.exe main.c DB OE BR INCDIR(C:\SiLabs\MCU\Inc)

line level    source

   1          
   2          #include "init.h"
   3          #include "lcd.h"
   4          #include "encoder.h"
   5          #include <stdio.h>
   6          
   7          
   8          void ADC0_ISR (void);
   9          
  10          long Result;                           // ADC0 decimated value
  11          
  12          void main(){
  13   1              int i, encspin;
  14   1              long v, a;
  15   1              char SFRPAGE_SAVE = SFRPAGE;
  16   1              Reset_Sources_Init();
  17   1              //Timer_Init();
  18   1              SMBus_Init();
  19   1              DAC_Init();
  20   1              Voltage_Reference_Init();
  21   1              Port_IO_Init();
  22   1              Oscillator_Init();
  23   1       
  24   1              LCDBLT  = 1; //Backlight LCD Off
  25   1      
  26   1              InitializeLCD();
  27   1      
  28   1              SFRPAGE = DAC0_PAGE;
  29   1              DAC0 = 0xB200;           // Write to DAC0
  30   1      
  31   1              SFRPAGE = DAC1_PAGE;
  32   1              DAC1 = 0x2FF0;           // Write to DAC1
  33   1         
  34   1              SFRPAGE = SFRPAGE_SAVE;             // Restore SFR page
  35   1      
  36   1      
  37   1              LCDBLT = 0; //Backlight LCD On
  38   1      
  39   1              //Clear_LCD();
  40   1              Write_Char(0, 'V');
  41   1      //      Write_Char(1, '0');
  42   1      //      Write_Char(2, '3');
  43   1      //      Write_Char(3, ',');
  44   1      //      Write_Char(4, '3');
  45   1              Write_Char(16, '[');
  46   1      //      Write_Char(17, '0');
  47   1      //      Write_Char(18, '3');
  48   1      //      Write_Char(19, ',');
  49   1      //      Write_Char(20, '3');
  50   1              Write_Char(21, ']');
  51   1              Write_Char(8, 'A');
  52   1      //      Write_Char(9, '0');
  53   1      //      Write_Char(10, ',');
  54   1      //      Write_Char(11, '5');
  55   1      //      Write_Char(12, '1');
C51 COMPILER V9.54   MAIN                                                                  06/11/2017 07:58:41 PAGE 2   

  56   1              Write_Char(24, '[');
  57   1      //      Write_Char(25, '0');
  58   1      //      Write_Char(26, ',');
  59   1      //      Write_Char(27, '9');
  60   1      //      Write_Char(28, '9');
  61   1              Write_Char(29, ']');
  62   1              Write_Char(30, ' ');
  63   1      
  64   1      
  65   1      //      show_text();
  66   1      
  67   1      
  68   1         TIMER3_Init (SYSCLK/SAMPLE_RATE);   // Initialize Timer3 to overflow at
  69   1      
  70   1      
  71   1              while(1){
  72   2      
  73   2                      _delay_us(80);
  74   2                      if (0 == ENC_PollEncoder()){
  75   3                              encspin = ENC_GetStateEncoder();        
  76   3                      }
  77   2                      if (encspin == 1){
  78   3                              Write_Char(1, '+');
  79   3                      }else{
  80   3                              Write_Char(1, '-');
  81   3                      }
  82   2      
  83   2              }
  84   1      }
*** WARNING C280 IN LINE 13 OF main.c: 'i': unreferenced local variable
*** WARNING C280 IN LINE 14 OF main.c: 'v': unreferenced local variable
*** WARNING C280 IN LINE 14 OF main.c: 'a': unreferenced local variable
  85          
  86          
  87          
  88          //-----------------------------------------------------------------------------
  89          // Interrupt Service Routines
  90          //-----------------------------------------------------------------------------
  91          
  92          //-----------------------------------------------------------------------------
  93          // ADC0_ISR
  94          //-----------------------------------------------------------------------------
  95          //
  96          // Here we take the ADC0 sample, add it to a running total <accumulator>, and
  97          // decrement our local decimation counter <int_dec>.  When <int_dec> reaches
  98          // zero, we post the decimated result in the global variable <Result>.
  99          //
 100          //-----------------------------------------------------------------------------
 101          void ADC0_ISR (void) interrupt 15
 102          {
 103   1         static unsigned int_dec=INT_DEC;    // Integrate/decimate counter
 104   1                                             // we post a new result when
 105   1                                             // int_dec = 0
 106   1         static long accumulator=0L;         // Here's where we integrate the
 107   1                                             // ADC samples
 108   1      
 109   1         AD0INT = 0;                         // Clear ADC conversion complete
 110   1                                             // indicator
 111   1      
 112   1         accumulator += ADC0;                // Read ADC value and add to running
 113   1                                             // total
 114   1         int_dec--;                          // Update decimation counter
C51 COMPILER V9.54   MAIN                                                                  06/11/2017 07:58:41 PAGE 3   

 115   1      
 116   1         if (int_dec == 0)                   // If zero, then post result
 117   1         {
 118   2            int_dec = INT_DEC;               // Reset counter
 119   2            Result = accumulator >> 8;
 120   2            accumulator = 0L;                // Reset accumulator
 121   2         }
 122   1      }
 123          
 124          
 125          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    534    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  3 WARNING(S),  0 ERROR(S)
